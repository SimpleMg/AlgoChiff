import random #line:1
import hashlib #line:2
import secrets #line:3
import time #line:4
from argparse import ArgumentParser #line:5
from cryptography .hazmat .primitives import hashes #line:7
from cryptography .hazmat .primitives .kdf .hkdf import HKDF #line:8
from cryptography .hazmat .backends import default_backend #line:9
class Daaz :#line:11
    def __init__ (OOOOOOOO00O0O0O00 ,O00O0000O0000O000 ):#line:12
        OOOOOOOO00O0O0O00 .KEY =O00O0000O0000O000 #line:13
        OOOOOOOO00O0O0O00 .keyBase =[]#line:14
        OOOOOOOO00O0O0O00 .keys =[[],[],[],[]]#line:15
    def aaaa (O000OOOO0000OOOO0 ,OOO0O0OO0O0O00OO0 ,O0OO00OO000O0OOOO ,exit =32 ):#line:17
        O0O0OOO0OOO0OOOOO =OOO0O0OO0O0O00OO0 .encode ('utf-8')#line:18
        random .seed (hashlib .sha256 (OOO0O0OO0O0O00OO0 .encode ('utf-8')).hexdigest ())#line:19
        OO0OO0OOO0O0O0OOO =random .randbytes (256 )#line:20
        return [hashlib .sha256 (HKDF (algorithm =hashes .SHA256 (),length =exit ,salt =OO0OO0OOO0O0O0OOO ,info =str (OO0O0O0O0OO0O0OOO ).encode ('utf-8'),backend =default_backend ()).derive (O0O0OOO0OOO0OOOOO ).hex ().encode ('utf-8')).hexdigest ()for OO0O0O0O0OO0O0OOO in range (O0OO00OO000O0OOOO )]#line:21
class Caaz :#line:23
    def __init__ (OOO0000O0O0000O00 ):#line:24
        OOO0000O0O0000O00 .func ={0 :OOO0000O0O0000O00 .aaah ,1 :OOO0000O0O0000O00 .aaag ,2 :OOO0000O0O0000O00 .aaao ,3 :OOO0000O0O0000O00 .aaap ,4 :OOO0000O0O0000O00 .aaaq }#line:25
        OOO0000O0O0000O00 .funcKey ={0 :OOO0000O0O0000O00 .aaav }#line:26
        OOO0000O0O0000O00 .funcDecode ={0 :OOO0000O0O0000O00 .aaah ,1 :OOO0000O0O0000O00 .aaal ,2 :OOO0000O0O0000O00 .aaam ,3 :OOO0000O0O0000O00 .aaap ,4 :OOO0000O0O0000O00 .aaaq }#line:27
        OOO0000O0O0000O00 .funcKeyDecode ={0 :OOO0000O0O0000O00 .aaaw }#line:28
    def aaad (OO0O0000O0OOOOO00 ,OO0000OO00O0000O0 ,OO00O000OOO0O0000 ):#line:30
        if len (OO0000OO00O0000O0 )>len (OO00O000OOO0O0000 ):#line:31
            OO0000OO00O0000O0 =OO0000OO00O0000O0 [:(len (OO00O000OOO0O0000 ))]#line:32
        elif len (OO0000OO00O0000O0 )<len (OO00O000OOO0O0000 ):#line:33
            while len (OO0000OO00O0000O0 )<len (OO00O000OOO0O0000 ):#line:34
                OO0000OO00O0000O0 +=OO0000OO00O0000O0 #line:35
            OO0000OO00O0000O0 =OO0000OO00O0000O0 [:(len (OO00O000OOO0O0000 ))]#line:36
        assert len (OO0000OO00O0000O0 )==len (OO00O000OOO0O0000 ),"aaad: msg and key have not the same len"#line:37
        O0O0OO0O00O0O0OO0 =OO0O0000O0OOOOO00 .aaak (OO0000OO00O0000O0 )#line:38
        OOO0OO00000OO00O0 =OO0O0000O0OOOOO00 .aaak (OO00O000OOO0O0000 )#line:39
        OOO0O0000OOO0OO0O =''#line:40
        for OO0O000OO0000OO0O in range (len (O0O0OO0O00O0O0OO0 )):#line:41
            OOO0O0000OOO0OO0O +=str (int (O0O0OO0O00O0O0OO0 [OO0O000OO0000OO0O ])^int (OOO0OO00000OO00O0 [OO0O000OO0000OO0O ]))#line:42
        return OO0O0000O0OOOOO00 .aaai (OOO0O0000OOO0OO0O )#line:43
    def aaab (OOOO000OOOO00OO0O ,OO00OO0O0O00OO0OO ):#line:46
        O0OO0O0O0O00OO000 =[str (ord (OOO00O0OO0000OOOO )).zfill (len (str (max ([ord (O00000O0O0000OO00 )for O00000O0O0000OO00 in OO00OO0O0O00OO0OO ]))))for OOO00O0OO0000OOOO in OO00OO0O0O00OO0OO ]#line:47
        return str (len (O0OO0O0O0O00OO000 [0 ]))+''.join (O0OO0O0O0O00OO000 )#line:48
    def aaac (OO00OO00O0O0OO00O ,OOO0O00OO0OO00OOO ):#line:50
        OOO0O0O000O0OOOO0 =int (OOO0O00OO0OO00OOO [0 ])#line:51
        O00OOOOO0OO0OO000 =[OOO0O00OO0OO00OOO [OOOOOO0OO00O00000 :OOOOOO0OO00O00000 +OOO0O0O000O0OOOO0 ]for OOOOOO0OO00O00000 in range (1 ,len (OOO0O00OO0OO00OOO ),OOO0O0O000O0OOOO0 )]#line:52
        return ''.join (chr (int (O0O0000OOO0O0OO00 ))for O0O0000OOO0O0OO00 in O00OOOOO0OO0OO000 )#line:53
    def aaae (O0OOOO000O0O0OOO0 ,O00OO0OOOO00O000O ):#line:55
        O00OO0OOOO00O000O =int (O00OO0OOOO00O000O )#line:56
        OOOOO0OOOOO00O0O0 =""#line:57
        while O00OO0OOOO00O000O >0 :#line:58
            O00OO0OOOO00O000O ,O00OO00O0O0O00O0O =divmod (O00OO0OOOO00O000O ,16 )#line:59
            OOOOO0OOOOO00O0O0 ="0123456789abcdef"[O00OO00O0O0O00O0O ]+OOOOO0OOOOO00O0O0 #line:60
        return OOOOO0OOOOO00O0O0 if OOOOO0OOOOO00O0O0 else "0"#line:61
    def hexToInt (OOO00OO0OO00O0000 ,O000OO0O00OO0O00O ):#line:63
        return str (sum (int (O0OO00O0OO0OO0O0O ,16 )*(16 **OO00000O0O00O0OOO )for OO00000O0O00O0OOO ,O0OO00O0OO0OO0O0O in enumerate (O000OO0O00OO0O00O [::-1 ])))#line:64
    def aaak (OO0O000000O0O0000 ,O00O0O00OO00O0000 ):#line:66
        OO00O0O0OO0OOOO0O =''#line:67
        for O0O00OOO00OOO0000 in O00O0O00OO00O0000 :#line:68
            OO00O0O0OO0OOOO0O +=bin (int (O0O00OOO00OOO0000 ,16 ))[2 :].zfill (4 )#line:69
        return OO00O0O0OO0OOOO0O #line:70
    def aaai (OOOOOO00OO0OOOOO0 ,OO0OO0OO000OO0OOO ):#line:72
        return ''.join ([hex (int (OO0OO0OO000OO0OOO [O000O00000O0OO000 :O000O00000O0OO000 +4 ],2 ))[2 :]for O000O00000O0OO000 in range (0 ,len (OO0OO0OO000OO0OOO ),4 )])#line:73
    def aaaf (OO00O0000OO0OO00O ,OOOOO0OOO0O0O0000 ):#line:75
        return int (OOOOO0OOO0O0O0000 ,2 )#line:76
    def aaaj (OOO0OOO0OOO0OOO0O ,OO0O0OO0O0O0OOO00 ):#line:78
        return bin (int (OO0O0OO0O0O0OOO00 ))[2 :]#line:79
    def aaah (OO0O0O0O0000O0O00 ,OO00OO0O0O00000O0 ):#line:83
        O0OOOOOO0OOO00OOO =OO0O0O0O0000O0O00 .aaak (OO00OO0O0O00000O0 )#line:84
        OOOOOO0O00OOO00OO =''#line:85
        for O000O0O0OO0O0000O in O0OOOOOO0OOO00OOO :#line:86
            OOOOOO0O00OOO00OO +='0'if O000O0O0OO0O0000O =='1'else '1'#line:87
        OO00OO0O0O00000O0 =OO0O0O0O0000O0O00 .aaai (OOOOOO0O00OOO00OO )#line:88
        return OO00OO0O0O00000O0 #line:89
    def aaag (O0OO0O0OO00000000 ,OO0OO000OO0000O00 ):#line:91
        O00O0OOO0O00O0OO0 =O0OO0O0OO00000000 .aaak (OO0OO000OO0000O00 )#line:92
        OO0000OO000OO00OO =""#line:93
        for OO0OOOO0OOOO00OO0 in range (len (O00O0OOO0O00O0OO0 )-1 ):#line:94
            if O00O0OOO0O00O0OO0 [OO0OOOO0OOOO00OO0 +1 ]=="1":#line:95
                OO0000OO000OO00OO +='0'if O00O0OOO0O00O0OO0 [OO0OOOO0OOOO00OO0 ]=='1'else '1'#line:96
            else :#line:97
                OO0000OO000OO00OO +=O00O0OOO0O00O0OO0 [OO0OOOO0OOOO00OO0 ]#line:98
        OO0000OO000OO00OO =OO0000OO000OO00OO +O00O0OOO0O00O0OO0 [-1 ]#line:99
        return O0OO0O0OO00000000 .aaai (OO0000OO000OO00OO )#line:100
    def aaal (OO0O0OO0OOO0000OO ,OO0O0O0O000O0O0O0 ):#line:102
        O0O00O00000O0OOO0 =OO0O0OO0OOO0000OO .aaak (OO0O0O0O000O0O0O0 )#line:103
        for OOOO0000O00O0OOOO in range (2 ,len (O0O00O00000O0OOO0 )+1 ):#line:104
            if O0O00O00000O0OOO0 [-OOOO0000O00O0OOOO +1 ]=="1":#line:105
                O0O00O00000O0OOO0 =O0O00O00000O0OOO0 [0 :-OOOO0000O00O0OOOO ]+('0'if O0O00O00000O0OOO0 [-OOOO0000O00O0OOOO ]=='1'else '1')+O0O00O00000O0OOO0 [len (O0O00O00000O0OOO0 )-OOOO0000O00O0OOOO +1 :len (O0O00O00000O0OOO0 )]#line:106
        return OO0O0OO0OOO0000OO .aaai (O0O00O00000O0OOO0 )#line:107
    def aaao (OO000O00O00O0O0O0 ,OO000O00O0O0OO0OO ):#line:109
        OO000O00O0O0OO0OO =OO000O00O0O0OO0OO #line:110
        O0O0O00OOO0O0O0O0 =''.join ('{:X}'.format (15 -int (O0O00OO0000O000OO ,16 ))for O0O00OO0000O000OO in OO000O00O0O0OO0OO )#line:111
        return O0O0O00OOO0O0O0O0 .lower ()#line:112
    def aaam (OO0OO000OOOO0O0O0 ,O00O00OO0OOO0OOOO ):#line:114
        O00O00OO0OOO0OOOO =O00O00OO0OOO0OOOO #line:115
        O00O0OOOO0O0000OO =''.join ('{:X}'.format (15 -int (OOO00OOOO00O0O000 ,16 ))for OOO00OOOO00O0O000 in O00O00OO0OOO0OOOO )#line:116
        return O00O0OOOO0O0000OO .lower ()#line:117
    def aaap (OO00000OO0000O000 ,OOO0O0OOOO0O00000 ):#line:119
        OOO0O0OOOO0O00000 =list (OOO0O0OOOO0O00000 )#line:120
        for O0OO0OOO0O00000O0 in range (len (OOO0O0OOOO0O00000 )-1 ):#line:121
            if O0OO0OOO0O00000O0 %2 ==0 :#line:122
                O00OOOO0OO0OOOOO0 =OOO0O0OOOO0O00000 [O0OO0OOO0O00000O0 ]#line:123
                OOO0O0OOOO0O00000 [O0OO0OOO0O00000O0 ]=OOO0O0OOOO0O00000 [O0OO0OOO0O00000O0 +1 ]#line:124
                OOO0O0OOOO0O00000 [O0OO0OOO0O00000O0 +1 ]=O00OOOO0OO0OOOOO0 #line:125
        return ''.join (OOO0O0OOOO0O00000 )#line:126
    def aaaq (OOOO0OO0OOOO00OOO ,O0OOO0OO0O0OOOOO0 ):#line:128
        return O0OOO0OO0O0OOOOO0 [::-1 ]#line:129
    def aaav (O00O0O00O00OO0OOO ,OO0O0OO000OOO0O0O ,O0OOOOO000O0OO0OO ):#line:132
        if len (OO0O0OO000OOO0O0O )%2 !=0 :#line:133
            OO0O0OO000OOO0O0O ='0'+OO0O0OO000OOO0O0O #line:134
            OOO0O0OOOOOO000OO =True #line:135
        else :OOO0O0OOOOOO000OO =False #line:136
        OOOOO00OO00OO00OO =[format (O0OO0O00O0OOOOOO0 ,'02x')for O0OO0O00O0OOOOOO0 in range (256 )]#line:137
        random .seed (O0OOOOO000O0OO0OO )#line:138
        random .shuffle (OOOOO00OO00OO00OO )#line:139
        O0OOO0OOOO0O0OO0O =[OOOOO00OO00OO00OO [OO0OOO0O0000OO00O :OO0OOO0O0000OO00O +16 ]for OO0OOO0O0000OO00O in range (0 ,256 ,16 )]#line:140
        OO00OO0OO0000OOOO ="".join (O0OOO0OOOO0O0OO0O [int (OO0O0OO000OOO0O0O [O0OO00O0000O00000 ],16 )][int (OO0O0OO000OOO0O0O [O0OO00O0000O00000 +1 ],16 )]for O0OO00O0000O00000 in range (0 ,len (OO0O0OO000OOO0O0O ),2 ))#line:141
        if OOO0O0OOOOOO000OO ==True :OO00OO0OO0000OOOO ="ff"+OO00OO0OO0000OOOO #line:142
        else :OO00OO0OO0000OOOO ="ee"+OO00OO0OO0000OOOO #line:143
        return OO00OO0OO0000OOOO #line:144
    def aaaw (O0OO0OOO0O0O00O00 ,OO00OO00O00O000OO ,OOO00OO00OOOO000O ):#line:146
        if OO00OO00O00O000OO [:2 ]=="ff":O00O0OO0O00OOO000 =True #line:147
        elif OO00OO00O00O000OO [:2 ]=="ee":O00O0OO0O00OOO000 =False #line:148
        O0OO0O000O00OOOOO =[format (OO0OO00O00OO0OO00 ,'02x')for OO0OO00O00OO0OO00 in range (256 )]#line:149
        random .seed (OOO00OO00OOOO000O )#line:150
        random .shuffle (O0OO0O000O00OOOOO )#line:151
        O0OOO000000O00O00 =[O0OO0O000O00OOOOO [O0OOO0000OO000000 :O0OOO0000OO000000 +16 ]for O0OOO0000OO000000 in range (0 ,256 ,16 )]#line:152
        O0O0OOO00O0O00OOO =''#line:153
        for O0000O00O0O0O00OO in range (0 ,len (OO00OO00O00O000OO ),2 ):#line:154
            O0O00OOOOOO0OOO00 =[(O0OO0OO0OOO0000OO ,O0O0OOOOO00OOOOO0 )for O0OO0OO0OOO0000OO ,O0O00000O000000OO in enumerate (O0OOO000000O00O00 )for O0O0OOOOO00OOOOO0 ,O0OO00O0O000OO0OO in enumerate (O0O00000O000000OO )if O0OO00O0O000OO0OO ==OO00OO00O00O000OO [O0000O00O0O0O00OO ]+OO00OO00O00O000OO [O0000O00O0O0O00OO +1 ]][0 ]#line:155
            O0O0OOO00O0O00OOO +=hex (O0O00OOOOOO0OOO00 [0 ])[-1 :]+hex (O0O00OOOOOO0OOO00 [1 ])[-1 :]#line:156
        if O00O0OO0O00OOO000 ==True :O0O0OOO00O0O00OOO =O0O0OOO00O0O00OOO [3 :]#line:157
        else :O0O0OOO00O0O00OOO =O0O0OOO00O0O00OOO [2 :]#line:158
        return O0O0OOO00O0O00OOO #line:159
    def aaax (O0O0OO0OO0O0O0O00 ,OOO0OOO00OOO000OO ,O00OOOO000OO0OO00 ):#line:161
        OOO0OOO00OOO000OO =[O000000O0O00OO0OO for O000000O0O00OO0OO in OOO0OOO00OOO000OO ]#line:162
        random .seed (O00OOOO000OO0OO00 )#line:163
        [random .shuffle (OOO0OOO00OOO000OO )for _OOOO00O0OO00OOOO0 in range (random .randint (5 ,20 ))]#line:164
        return ''.join (OOO0OOO00OOO000OO )#line:165
    def aaay (O000000OOOOO00OO0 ,OO0OOO0O0000O0000 ,OOOO00O0OO00OO000 ):#line:167
        OO0OOO0O0000O0000 =[O00OO000O0OOO00OO for O00OO000O0OOO00OO in OO0OOO0O0000O0000 ]#line:168
        OO0O00OO0OO00OO00 =[str (O0OO00O00000OOO00 )for O0OO00O00000OOO00 in range (len (OO0OOO0O0000O0000 ))]#line:169
        random .seed (OOOO00O0OO00OO000 )#line:170
        for OOOOOOOOO0OOOO0OO in range (random .randint (5 ,20 )):#line:171
            random .shuffle (OO0O00OO0OO00OO00 )#line:172
        O0O00O00OOO0OO0O0 =[None for _O0O00O00O0O0000OO in range (len (OO0OOO0O0000O0000 ))]#line:173
        for O000O0O00000O0OO0 ,OO0OOOO0OOO00O0O0 in enumerate (OO0O00OO0OO00OO00 ):#line:174
            O0O00O00OOO0OO0O0 [int (OO0OOOO0OOO00O0O0 )]=OO0OOO0O0000O0000 [O000O0O00000O0OO0 ]#line:175
        return ''.join (O0O00O00OOO0OO0O0 )#line:176
class Aaaz :#line:178
    def __init__ (OOOO000O0OOOO0O0O ,OOOO0OOOO00000000 ,OOO00OOOO00O0O0O0 ):#line:179
        OOOO000O0OOOO0O0O .key =Daaz (OOOO0OOOO00000000 )#line:180
        OOOO000O0OOOO0O0O .func =Caaz ()#line:181
        OOOO000O0OOOO0O0O .message =OOO00OOOO00O0O0O0 #line:182
        OOOO000O0OOOO0O0O .abaa (True )#line:183
        OOOO000O0OOOO0O0O .acaa ()#line:184
        OOOO000O0OOOO0O0O .aeaa ()#line:185
        OOOO000O0OOOO0O0O .afaa (0 )#line:186
        OOOO000O0OOOO0O0O .hjaa ()#line:187
        OOOO000O0OOOO0O0O .abaa ()#line:188
        OOOO000O0OOOO0O0O .aeaa ()#line:189
        OOOO000O0OOOO0O0O .gaaa ()#line:190
        OOOO000O0OOOO0O0O .hjaa (OOOO000O0OOOO0O0O .vecInit )#line:191
        OOOO000O0OOOO0O0O .abaa ()#line:192
        OOOO000O0OOOO0O0O .afaa (2 )#line:193
        OOOO000O0OOOO0O0O .hjaa ()#line:194
    def abaa (O0000OOO0O0O00OO0 ,first =False ):#line:196
        if first :#line:197
            OOOO00O0000OOOO0O =O0000OOO0O0O00OO0 .func .aaae (O0000OOO0O0O00OO0 .func .aaab (O0000OOO0O0O00OO0 .message ))#line:198
            if len (OOOO00O0000OOOO0O )%2 !=0 :OOOO00O0000OOOO0O ='0'+OOOO00O0000OOOO0O #line:199
        else :#line:200
            OOOO00O0000OOOO0O =O0000OOO0O0O00OO0 .message #line:201
        O0000OOO0O0O00OO0 .message =[OOOO00O0000OOOO0O [OO0OO00000O000O0O :OO0OO00000O000O0O +32 ]for OO0OO00000O000O0O in range (0 ,len (OOOO00O0000OOOO0O ),32 )]#line:202
    def acaa (O0000O00000O00O0O ):#line:204
        O0000O00000O00O0O .key .keyBase =O0000O00000O00O0O .key .aaaa (O0000O00000O00O0O .key .KEY ,4 )#line:205
        O0000O00000O00O0O .key .keys [3 ]=O0000O00000O00O0O .key .aaaa (O0000O00000O00O0O .key .keyBase [3 ],2 )#line:206
    def adaa (O0OOO000OOOOO00O0 ,first =False ):#line:208
        if first :#line:209
            O0OOO000OOOOO00O0 .message =O0OOO000OOOOO00O0 .func .aaac (O0OOO000OOOOO00O0 .func .hexToInt (''.join (O0OOO000OOOOO00O0 .message )))#line:210
        else :#line:211
            O0OOO000OOOOO00O0 .message =''.join (O0OOO000OOOOO00O0 .message )#line:212
    def aeaa (O000OOOOO00OO0O00 ):#line:214
        O000OOOOO00OO0O00 .vecInit =[]#line:215
        O000OOOOO00OO0O00 .vecInit .append ([secrets .randbelow (len (O000OOOOO00OO0O00 .func .func ))for O00O000O000O00000 in range ((5 *16 )*len (O000OOOOO00OO0O00 .message ))])#line:216
        O000OOOOO00OO0O00 .vecInit .append ([secrets .randbelow (len (O000OOOOO00OO0O00 .func .funcKey ))for O0OOO0OOO00OOO0OO in range (16 *len (O000OOOOO00OO0O00 .message ))])#line:217
    def afaa (O0O0O00O0OO0000O0 ,O0O0OO0OO0O00000O ):#line:219
        O0O0O00O0OO0000O0 .key .keys [O0O0OO0OO0O00000O ]=O0O0O00O0OO0000O0 .key .aaaa (O0O0O00O0OO0000O0 .key .keyBase [O0O0OO0OO0O00000O ],5 *len (O0O0O00O0OO0000O0 .message ))#line:220
        for OOO00O0OOOO00O0O0 in range (len (O0O0O00O0OO0000O0 .message )):#line:221
            for OO0O0O0O000OO000O in range (5 ):#line:222
                OOO0000O0OO00000O =O0O0O00O0OO0000O0 .key .aaaa (O0O0O00O0OO0000O0 .key .keys [O0O0OO0OO0O00000O ][OO0O0O0O000OO000O +OOO00O0OOOO00O0O0 *5 ],3 )#line:223
                O0O0O00O0OO0000O0 .message [OOO00O0OOOO00O0O0 ]=O0O0O00O0OO0000O0 .func .aaad (OOO0000O0OO00000O [0 ],O0O0O00O0OO0000O0 .message [OOO00O0OOOO00O0O0 ])#line:224
                O0O0O00O0OO0000O0 .message [OOO00O0OOOO00O0O0 ]=O0O0O00O0OO0000O0 .func .funcKey [OO0O0O0O000OO000O %len (O0O0O00O0OO0000O0 .func .funcKey )](O0O0O00O0OO0000O0 .message [OOO00O0OOOO00O0O0 ],OOO0000O0OO00000O [1 ])#line:225
                O0O0O00O0OO0000O0 .message [OOO00O0OOOO00O0O0 ]=O0O0O00O0OO0000O0 .func .aaad (OOO0000O0OO00000O [2 ],O0O0O00O0OO0000O0 .message [OOO00O0OOOO00O0O0 ])#line:226
    def gaaa (OOOO0000OOO000000 ):#line:228
        OOOO0000OOO000000 .key .keys [1 ]=OOOO0000OOO000000 .key .aaaa (OOOO0000OOO000000 .key .keyBase [1 ],16 *len (OOOO0000OOO000000 .message ))#line:229
        for O000OO0O0OOOOOOO0 in range (len (OOOO0000OOO000000 .message )):#line:230
            for OOO00000OO0OOOOOO in range (16 ):#line:231
                O0O0OOOO0O0000OOO =OOOO0000OOO000000 .key .aaaa (OOOO0000OOO000000 .key .keys [1 ][OOO00000OO0OOOOOO +O000OO0O0OOOOOOO0 *16 ],3 )#line:232
                OOOO0000OOO000000 .message [O000OO0O0OOOOOOO0 ]=OOOO0000OOO000000 .func .aaad (O0O0OOOO0O0000OOO [0 ],OOOO0000OOO000000 .message [O000OO0O0OOOOOOO0 ])#line:233
                for OO000000OO00000O0 in range (5 ):#line:234
                    OOOO0000OOO000000 .message [O000OO0O0OOOOOOO0 ]=OOOO0000OOO000000 .func .func [OOOO0000OOO000000 .vecInit [0 ][OOO00000OO0OOOOOO *5 +OO000000OO00000O0 +O000OO0O0OOOOOOO0 *16 *5 ]](OOOO0000OOO000000 .message [O000OO0O0OOOOOOO0 ])#line:235
                OOOO0000OOO000000 .message [O000OO0O0OOOOOOO0 ]=OOOO0000OOO000000 .func .funcKey [OOOO0000OOO000000 .vecInit [1 ][OOO00000OO0OOOOOO +O000OO0O0OOOOOOO0 *16 ]](OOOO0000OOO000000 .message [O000OO0O0OOOOOOO0 ],O0O0OOOO0O0000OOO [1 ])#line:236
                OOOO0000OOO000000 .message [O000OO0O0OOOOOOO0 ]=OOOO0000OOO000000 .func .aaad (O0O0OOOO0O0000OOO [2 ],OOOO0000OOO000000 .message [O000OO0O0OOOOOOO0 ])#line:237
    def haaa (O000O0000O000OO0O ,O0OO000O00O0OOO00 ,O0OOOO0O00O00O000 ):#line:239
        if len (O0OOOO0O00O00O000 )==len (O0OO000O00O0OOO00 ):#line:240
            return O0OOOO0O00O00O000 #line:241
        else :#line:242
            return O000O0000O000OO0O .key .aaaa (O0OOOO0O00O00O000 ,1 ,len (O0OO000O00O0OOO00 ))[0 ]#line:243
    def hjaa (OO0O0O000O0O000O0 ,vector =None ):#line:245
        OOOO0O00OOO000OOO =OO0O0O000O0O000O0 .message #line:246
        O0OOO0000OO00OOOO =len (max (OOOO0O00OOO000OOO ,key =len ))#line:247
        OOOO0O00OOO000OOO =[OOOO0O00OOO000OOO [O00OOO0O000OO00O0 ].zfill (O0OOO0000OO00OOOO )for O00OOO0O000OO00O0 in range (len (OOOO0O00OOO000OOO ))]#line:248
        OO0OOO000O00O0OOO =hex (len (OO0O0O000O0O000O0 .message ))[2 :].zfill (4 )#line:249
        OOOO0O00OOO000OOO =OO0OOO000O00O0OOO +"".join (OOOO0O00OOO000OOO )#line:250
        if vector :#line:251
            OO00O0O00OO0O0OOO =''#line:252
            for OO000O0OOO000OOO0 in vector [0 ]:OO00O0O00OO0O0OOO +=str (OO000O0OOO000OOO0 ).zfill (2 )#line:253
            OO00O0O00OO0O0OOO +=str (len (OO0O0O000O0O000O0 .func .func ))#line:254
            for OO000O0OOO000OOO0 in vector [1 ]:OO00O0O00OO0O0OOO +=str (OO000O0OOO000OOO0 ).zfill (2 )#line:255
        OO0O0O000O0O000O0 .message =OOOO0O00OOO000OOO if not vector else OO00O0O00OO0O0OOO +str (len (OO0O0O000O0O000O0 .func .func ))+OOOO0O00OOO000OOO #line:256
class Baaz :#line:258
    def __init__ (OO000OOOO0O00OOOO ,O0OO0OOOO0O000O00 ,O0O0OOO00OOO000O0 ):#line:259
        OO000OOOO0O00OOOO .key =Daaz (O0OO0OOOO0O000O00 )#line:260
        OO000OOOO0O00OOOO .func =Caaz ()#line:261
        OO000OOOO0O00OOOO .message =O0O0OOO00OOO000O0 #line:262
        OO000OOOO0O00OOOO .acaa ()#line:263
        OO000OOOO0O00OOOO .hjka ()#line:264
        OO000OOOO0O00OOOO .afaa (2 )#line:265
        OO000OOOO0O00OOOO .adaa ()#line:266
        OO000OOOO0O00OOOO .hjka (True )#line:267
        OO000OOOO0O00OOOO .gaaa ()#line:268
        OO000OOOO0O00OOOO .adaa ()#line:269
        OO000OOOO0O00OOOO .hjka ()#line:270
        OO000OOOO0O00OOOO .afaa (0 )#line:271
        OO000OOOO0O00OOOO .adaa (True )#line:272
    def adaa (O0000OOOO00OOO0O0 ,first =False ):#line:274
        if first :#line:275
            O0000OOOO00OOO0O0 .message =O0000OOOO00OOO0O0 .func .aaac (O0000OOOO00OOO0O0 .func .hexToInt (''.join (O0000OOOO00OOO0O0 .message )))#line:276
        else :#line:277
            O0000OOOO00OOO0O0 .message =''.join (O0000OOOO00OOO0O0 .message )#line:278
    def acaa (OO0OOOO0000OOO0OO ):#line:280
        OO0OOOO0000OOO0OO .key .keyBase =OO0OOOO0000OOO0OO .key .aaaa (OO0OOOO0000OOO0OO .key .KEY ,4 )#line:281
        OO0OOOO0000OOO0OO .key .keys [3 ]=OO0OOOO0000OOO0OO .key .aaaa (OO0OOOO0000OOO0OO .key .keyBase [3 ],2 )#line:282
    def afaa (OO00000OOO0OOOOOO ,OO000OO0O0OO000OO ):#line:284
        OO00000OOO0OOOOOO .key .keys [OO000OO0O0OO000OO ]=OO00000OOO0OOOOOO .key .aaaa (OO00000OOO0OOOOOO .key .keyBase [OO000OO0O0OO000OO ],5 *len (OO00000OOO0OOOOOO .message ))#line:285
        for O0OO00OO000OOO0OO in range (1 ,len (OO00000OOO0OOOOOO .message )+1 ):#line:286
            for OO0OOOOOO0OOO0000 in range (1 ,6 ):#line:287
                O00OOOO00OO00OOOO =OO00000OOO0OOOOOO .key .aaaa (OO00000OOO0OOOOOO .key .keys [OO000OO0O0OO000OO ][-(OO0OOOOOO0OOO0000 +(O0OO00OO000OOO0OO -1 )*5 )],3 )#line:288
                OO00000OOO0OOOOOO .message [-O0OO00OO000OOO0OO ]=OO00000OOO0OOOOOO .func .aaad (O00OOOO00OO00OOOO [2 ],OO00000OOO0OOOOOO .message [-O0OO00OO000OOO0OO ])#line:289
                OO00000OOO0OOOOOO .message [-O0OO00OO000OOO0OO ]=OO00000OOO0OOOOOO .func .funcKeyDecode [(OO0OOOOOO0OOO0000 -1 )%len (OO00000OOO0OOOOOO .func .funcKeyDecode )](OO00000OOO0OOOOOO .message [-O0OO00OO000OOO0OO ],O00OOOO00OO00OOOO [1 ])#line:290
                OO00000OOO0OOOOOO .message [-O0OO00OO000OOO0OO ]=OO00000OOO0OOOOOO .func .aaad (O00OOOO00OO00OOOO [0 ],OO00000OOO0OOOOOO .message [-O0OO00OO000OOO0OO ])#line:291
    def gaaa (O0O0OO000OOOOOO0O ):#line:293
        O0O0OO000OOOOOO0O .key .keys [1 ]=O0O0OO000OOOOOO0O .key .aaaa (O0O0OO000OOOOOO0O .key .keyBase [1 ],16 *len (O0O0OO000OOOOOO0O .message ))#line:294
        for OO00OO000O0O000O0 in range (1 ,len (O0O0OO000OOOOOO0O .message )+1 ):#line:295
            for OO0O00OOO0OO0O0OO in range (1 ,17 ):#line:296
                O000OO0OO0OOO0O00 =O0O0OO000OOOOOO0O .key .aaaa (O0O0OO000OOOOOO0O .key .keys [1 ][-(OO0O00OOO0OO0O0OO +(OO00OO000O0O000O0 -1 )*16 )],3 )#line:297
                O0O0OO000OOOOOO0O .message [-OO00OO000O0O000O0 ]=O0O0OO000OOOOOO0O .func .aaad (O000OO0OO0OOO0O00 [2 ],O0O0OO000OOOOOO0O .message [-OO00OO000O0O000O0 ])#line:298
                O0O0OO000OOOOOO0O .message [-OO00OO000O0O000O0 ]=O0O0OO000OOOOOO0O .func .funcKeyDecode [O0O0OO000OOOOOO0O .vecInit [1 ][-(OO0O00OOO0OO0O0OO +(OO00OO000O0O000O0 -1 )*16 )]](O0O0OO000OOOOOO0O .message [-OO00OO000O0O000O0 ],O000OO0OO0OOO0O00 [1 ])#line:299
                for O0O00OO000000O0OO in range (1 ,6 ):#line:300
                    O0O0OO000OOOOOO0O .message [-OO00OO000O0O000O0 ]=O0O0OO000OOOOOO0O .func .funcDecode [O0O0OO000OOOOOO0O .vecInit [0 ][-((OO0O00OOO0OO0O0OO -1 )*5 +O0O00OO000000O0OO +(OO00OO000O0O000O0 -1 )*16 *5 )]](O0O0OO000OOOOOO0O .message [-OO00OO000O0O000O0 ])#line:301
                O0O0OO000OOOOOO0O .message [-OO00OO000O0O000O0 ]=O0O0OO000OOOOOO0O .func .aaad (O000OO0OO0OOO0O00 [0 ],O0O0OO000OOOOOO0O .message [-OO00OO000O0O000O0 ])#line:302
    def haaa (OOOO0OO0OO0O00OOO ,OOO0O00O0OOOO0000 ,OO000OO00OO00000O ):#line:305
        if len (OO000OO00OO00000O )==len (OOO0O00O0OOOO0000 ):#line:306
            return OO000OO00OO00000O #line:307
        else :#line:308
            return OOOO0OO0OO0O00OOO .key .aaaa (OO000OO00OO00000O ,1 ,len (OOO0O00O0OOOO0000 ))[0 ]#line:309
    def hjka (O0000OOO000OOO000 ,vector =False ):#line:311
        OO0OO000OOOO00O0O =[]#line:312
        if vector :#line:313
            OO0000O000O0O0OOO =O0000OOO000OOO000 .message .find (str (len (O0000OOO000OOO000 .func .func )))#line:314
            OO0OO000OOOO00O0O .append (O0000OOO000OOO000 .message [0 :OO0000O000O0O0OOO ])#line:315
            OOOOO000O00O0OO00 =O0000OOO000OOO000 .message .find (str (len (O0000OOO000OOO000 .func .func )),OO0000O000O0O0OOO +1 )#line:316
            OO0OO000OOOO00O0O .append (O0000OOO000OOO000 .message [OO0000O000O0O0OOO +1 :OOOOO000O00O0OO00 ])#line:317
            O0000OOO000OOO000 .message =O0000OOO000OOO000 .message [OOOOO000O00O0OO00 +1 :]#line:318
            O0000OOO000OOO000 .vecInit =[[int (OO0OO000OOOO00O0O [0 ][O000000O0OOOO0O0O :O000000O0OOOO0O0O +2 ])for O000000O0OOOO0O0O in range (0 ,len (OO0OO000OOOO00O0O [0 ]),2 )],[int (OO0OO000OOOO00O0O [1 ][OO00000O00000OO00 :OO00000O00000OO00 +2 ])for OO00000O00000OO00 in range (0 ,len (OO0OO000OOOO00O0O [1 ]),2 )]]#line:319
        else :O00OOOOO000OOO0OO =[0 ,0 ]#line:320
        O0OO00O00O00OO0OO =int (O0000OOO000OOO000 .message [0 :4 ],16 )#line:321
        O00OOOOO000OOO0OO =O0000OOO000OOO000 .message [4 :]#line:322
        assert len (O00OOOOO000OOO0OO )%O0OO00O00O00OO0OO ==0 ,"Message non divisible"#line:323
        OO00O000OOOO00OOO =len (O00OOOOO000OOO0OO )/O0OO00O00O00OO0OO #line:324
        O00O00O0O0O00O000 =[O00OOOOO000OOO0OO [OO00OO0OOOO000OOO :OO00OO0OOOO000OOO +int (OO00O000OOOO00OOO )]for OO00OO0OOOO000OOO in range (0 ,len (O00OOOOO000OOO0OO ),int (OO00O000OOOO00OOO ))]#line:325
        O0000OOO000OOO000 .message =[OO0000OOO00OOOO0O .lstrip ('0')if len (OO0000OOO00OOOO0O .lstrip ('0'))%2 ==0 else "0"+OO0000OOO00OOOO0O .lstrip ('0')for OO0000OOO00OOOO0O in O00O00O0O0O00O000 ]#line:326
def hmka ()->None :#line:329
    OOOOO00OOO0OOOOO0 =ArgumentParser ()#line:330
    OOOOO00OOO0OOOOO0 .add_argument ("-f","--file",help ="File with message")#line:331
    OOOOO00OOO0OOOOO0 .add_argument ("-k","--key",help ="Encryption key")#line:332
    OOOOO00OOO0OOOOO0 .add_argument ("-m","--mode",help ="Aaaz (E) / Baaz (D)")#line:333
    O00O0O0O00O0OO00O =OOOOO00OOO0OOOOO0 .parse_args ()#line:334
    assert O00O0O0O00O0OO00O .key ,"Miss the KEY (512 bits) with --key <key>"#line:335
    OOOOO00O00O0O0OOO =O00O0O0O00O0OO00O .key #line:336
    assert O00O0O0O00O0OO00O .file ,"Miss file path with --file <path>"#line:337
    OOO0OOOOOOOOO0000 =open (O00O0O0O00O0OO00O .file ,'r',encoding ="utf-8").read ()#line:338
    O0OOOO0O000000O0O =1 if str (O00O0O0O00O0OO00O .mode ).lower ()=='d'or str (O00O0O0O00O0OO00O .mode ).lower ()=='Baaz'else 0 #line:339
    if O0OOOO0O000000O0O ==0 :#line:340
        OOOOO000000OO0OO0 =time .time ()#line:341
        OOO0OOOOOOOOO0000 =[OOO0OOOOOOOOO0000 [OO0O0OOOOO0O0OO00 :OO0O0OOOOO0O0OO00 +16 ]for OO0O0OOOOO0O0OO00 in range (0 ,len (OOO0OOOOOOOOO0000 ),16 )]#line:342
        for OO0OOOO0OO0000000 in range (len (OOO0OOOOOOOOO0000 )):#line:343
            OOO0OOOOOOOOO0000 [OO0OOOO0OO0000000 ]=Aaaz (OOOOO00O00O0O0OOO ,OOO0OOOOOOOOO0000 [OO0OOOO0OO0000000 ])#line:344
        OOO0OOOOOO00000O0 =open ('chiff.txt','w',encoding ="utf-8")#line:345
        OOO0OOOOOO00000O0 .write ('|'.join ([O00000OOOOO00OO00 .message for O00000OOOOO00OO00 in OOO0OOOOOOOOO0000 ]))#line:346
        print (round (time .time ()-OOOOO000000OO0OO0 ,2 ),'sec')#line:347
    else :#line:348
        OOOOO000000OO0OO0 =time .time ()#line:349
        OOO0OOOOOOOOO0000 =OOO0OOOOOOOOO0000 .split ('|')#line:350
        for OO0OOOO0OO0000000 in range (len (OOO0OOOOOOOOO0000 )):#line:351
            OOO0OOOOOOOOO0000 [OO0OOOO0OO0000000 ]=Baaz (OOOOO00O00O0O0OOO ,OOO0OOOOOOOOO0000 [OO0OOOO0OO0000000 ])#line:352
        OOO0OOOOOO00000O0 =open ('dechi.txt','w',encoding ="utf-8")#line:353
        OOO0OOOOOO00000O0 .write (''.join ([O0O0O0OO00O0O0O00 .message for O0O0O0OO00O0O0O00 in OOO0OOOOOOOOO0000 ]))#line:354
        print (round (time .time ()-OOOOO000000OO0OO0 ,2 ),'sec')#line:355
if __name__ =='__main__':#line:360
    hmka ()
